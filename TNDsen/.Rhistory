causal_bounds(c(1,2,3,4), 0.1, 5)
TND_causal_bounds(c(1,2,3,4), 0.1, 5)
library(TNDsen)
TND_causal_bounds(c(1,2,3,4), 0.1, 5)
TND_causal_bounds(c(1,2,3,4), 0.1)
TND_causal_bounds(c(1,2,3,4), 0.1, Inf)
TND_causal_bounds(c(1,2,3,4), 0.05, Inf)
TND_causal_bounds(c(1,2,3,4))
TND_causal_bounds(c(1,2,3,4))
TND_causal_bounds(c(1,2,3,4), 0.1)
TND_causal_bounds(c(1,2,3,4))
TND_causal_bounds(c(1,2,3,4), 0)
TND_causal_bounds(c(1,2,3,4), 0, xi=2)
TND_causal_bounds(c(1,2,3,4), 0, gamma=5, xi=2)
TND_causal_bounds(c(1,2,3,4), 0, xi=2)
TND_causal_bounds(c(1,2,3,4), delta = 0, gamma = 5, xi=2)
knitr::opts_chunk$set(echo = TRUE)
TND_causal_bounds(o, 0)
library(TNDsen)
o = c(1,2,3,4)*1000
TND_causal_bounds(o, 0)
k = TND_causal_bounds(o, 0)
k$upper.bound == odds.ratio(o) & k$lower.bound == odds.ratio(o)
k = TND_causal_bounds(o, 0)
k$upper.bound == odds.ratio(o)
odds.ratio(o)
k$upper.bound
k$upper.bound == odds.ratio(o)
k$upper.bound - odds.ratio(o) < 1e-5
k$upper.bound - odds.ratio(o)
k = TND_causal_bounds(o, 0)
k$upper.bound - odds.ratio(o) < 1e-10 & abs(k$lowe.bound - odds.ratio(o)) < 1e-10
k = TND_causal_bounds(o, 0)
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lowe.bound - odds.ratio(o)) < 1e-10
k = TND_causal_bounds(o, 0)
(abs(k$upper.bound - odds.ratio(o))) < 1e-10 & (abs(k$lowe.bound - odds.ratio(o)) < 1e-10)
knitr::opts_chunk$set(echo = TRUE)
library(TNDsen)
o = c(1,2,3,4)*1000
abs(k$lowe.bound - odds.ratio(o)) < 1e-10
abs(k$lower.bound - odds.ratio(o)) < 1e-10
k = TND_causal_bounds(o, 0)
(abs(k$upper.bound - odds.ratio(o))) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
k = TND_causal_bounds(o, 0)
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
k = TND_causal_bounds(o, 0.1, 1)
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, xi=2)
abs(k1$upper.bound - k2$upper.bound)) < 1e-10 & abs(k1$lower.bound - k2$lower.bound) < 1e-10
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, xi=2)
abs(k1$upper.bound - k2$upper.bound) < 1e-10 & abs(k1$lower.bound - k2$lower.bound) < 1e-10
k2$upper.bound
k1$upper.bound
k2$upper.bound
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, xi=2)
abs(k1$upper.bound - k2$upper.bound) < 1e-5 & abs(k1$lower.bound - k2$lower.bound) < 1e-5
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, xi=2)
abs(k1$upper.bound - k2$upper.bound) < 1e-4 & abs(k1$lower.bound - k2$lower.bound) < 1e-4
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
alpha = 0.95
conf.type = c('normal', 'transformed', 'quadratic')
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
o = o * 1000
k2 = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
o = o * 1000
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
o = o * 10000
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
o = o * 10000
k$upper.bound
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
o = o * 10000
k$upper.bound
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-5 & abs(k$lower.bound - odds.ratio(o)) < 1e-5
o
library(TNDsen)
o = c(1,2,3,4)*1000
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-5 & abs(k$lower.bound - odds.ratio(o)) < 1e-5
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3
k$upper.bound
alpha = 0.95
conf.type = c('normal', 'transformed', 'quadratic')
o = c(1,2,3,4)*1e6
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3
k$upper.bound
alpha = 0.95
conf.type = c('normal', 'transformed', 'quadratic')
o = c(1,2,3,4)*1e8
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3
k$upper.bound
k = TND_causal_bounds(o, 0.1, 1)
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, xi=2)
abs(k1$upper.bound - k2$upper.bound) < 1e-4 & abs(k1$lower.bound - k2$lower.bound) < 1e-4
k = TND_causal_bounds(o, 0.1, 1, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = 'normal')
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = 'normal')
abs(k1$upper.bound - k2$upper.bound) < 1e-4 & abs(k1$lower.bound - k2$lower.bound) < 1e-4
k = TND_causal_bounds(o, 0.1, 1, alpha = alpha, conf.type = 'normal')
abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = 'normal')
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = 'normal')
abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3
for(conf in conf.type)
{
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = conf)
abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3
}
for(conf in conf.type)
{
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = conf)
print(abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3)
}
for(conf in conf.type)
{
k = TND_causal_bounds(o, 0.1, 1, alpha = alpha, conf.type = 'normal')
print(abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3)
}
k1$upper.bound
k1$upper.bound
k2$upper.bound
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
k2 =  TND_causal_bounds(o, 0.1, gamma = 5, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-2 & abs(k1$lower.bound - k2$lower.bound) < 1e-2)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-2 & abs(k1$lower.bound - k2$lower.bound) < 1e-2)
}
TND_causal_bounds(o, 1, 5)
TND_causal_bounds(o, 1, 5, 2)
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, alpha = alpha)
k2 =  TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, xi=2)
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3)
}
knitr::opts_chunk$set(echo = TRUE)
library(TNDsen)
o = c(1,2,3,4)*1000
k = TND_causal_bounds(o, 0)
k = TND_causal_bounds(o, 0)
knitr::opts_chunk$set(echo = TRUE)
library(TNDsen)
o = c(1,2,3,4)*1000
k = TND_causal_bounds(o, 0)
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
k = TND_causal_bounds(o, 0.1, 1)
abs(k$upper.bound - odds.ratio(o)) < 1e-10 & abs(k$lower.bound - odds.ratio(o)) < 1e-10
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, xi=2)
abs(k1$upper.bound - k2$upper.bound) < 1e-4 & abs(k1$lower.bound - k2$lower.bound) < 1e-4
alpha = 0.95
conf.type = c('normal', 'transformed', 'quadratic')
o = c(1,2,3,4)*1e8
for(conf in conf.type)
{
k = TND_causal_bounds(o, 0, alpha = alpha, conf.type = conf)
print(abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3)
}
for(conf in conf.type)
{
k = TND_causal_bounds(o, 0.1, 1, alpha = alpha, conf.type = 'normal')
print(abs(k$upper.bound - odds.ratio(o)) < 1e-3 & abs(k$lower.bound - odds.ratio(o)) < 1e-3)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, xi=2)
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-2 & abs(k1$lower.bound - k2$lower.bound) < 1e-2)
}
alpha = 0.95
conf.type = c('normal', 'transformed')
o = c(1,2,3,4)*1e8
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-2 & abs(k1$lower.bound - k2$lower.bound) < 1e-2)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, xi=2)
k2 = TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-3 & abs(k1$lower.bound - k2$lower.bound) < 1e-3)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, xi=2)
k2 = TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-2 & abs(k1$lower.bound - k2$lower.bound) < 1e-2)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1)
k2 =  TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-2 & abs(k1$lower.bound - k2$lower.bound) < 1e-2)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, xi=2)
k2 = TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-2 & abs(k1$lower.bound - k2$lower.bound) < 1e-2)
}
for(conf in conf.type)
{
k1 = TND_causal_bounds(o, 0.1, alpha = alpha, conf.type = conf)
k2 =  TND_causal_bounds(o, 0.1, xi=2, alpha = alpha, conf.type = conf)
print(abs(k1$upper.bound - k2$upper.bound) < 1e-2 & abs(k1$lower.bound - k2$lower.bound) < 1e-2)
}
TND_causal_bounds(o, 0.1, alpha=alpha)
TND_causal_bounds(o, 0.1, conf.type = 'transformed')
